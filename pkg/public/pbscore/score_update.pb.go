// Code generated by protoc-gen-go. DO NOT EDIT.
// source: score_update.proto

package pbscore

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ScoreRequest struct {
	PlayerId             int32    `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	Point                int32    `protobuf:"varint,2,opt,name=point,proto3" json:"point,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ScoreRequest) Reset()         { *m = ScoreRequest{} }
func (m *ScoreRequest) String() string { return proto.CompactTextString(m) }
func (*ScoreRequest) ProtoMessage()    {}
func (*ScoreRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0a54a0176ad15b3, []int{0}
}

func (m *ScoreRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScoreRequest.Unmarshal(m, b)
}
func (m *ScoreRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScoreRequest.Marshal(b, m, deterministic)
}
func (m *ScoreRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScoreRequest.Merge(m, src)
}
func (m *ScoreRequest) XXX_Size() int {
	return xxx_messageInfo_ScoreRequest.Size(m)
}
func (m *ScoreRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ScoreRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ScoreRequest proto.InternalMessageInfo

func (m *ScoreRequest) GetPlayerId() int32 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *ScoreRequest) GetPoint() int32 {
	if m != nil {
		return m.Point
	}
	return 0
}

type ScoreResponse struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ScoreResponse) Reset()         { *m = ScoreResponse{} }
func (m *ScoreResponse) String() string { return proto.CompactTextString(m) }
func (*ScoreResponse) ProtoMessage()    {}
func (*ScoreResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0a54a0176ad15b3, []int{1}
}

func (m *ScoreResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScoreResponse.Unmarshal(m, b)
}
func (m *ScoreResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScoreResponse.Marshal(b, m, deterministic)
}
func (m *ScoreResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScoreResponse.Merge(m, src)
}
func (m *ScoreResponse) XXX_Size() int {
	return xxx_messageInfo_ScoreResponse.Size(m)
}
func (m *ScoreResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ScoreResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ScoreResponse proto.InternalMessageInfo

func (m *ScoreResponse) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func init() {
	proto.RegisterType((*ScoreRequest)(nil), "pbscore.ScoreRequest")
	proto.RegisterType((*ScoreResponse)(nil), "pbscore.ScoreResponse")
}

func init() { proto.RegisterFile("score_update.proto", fileDescriptor_f0a54a0176ad15b3) }

var fileDescriptor_f0a54a0176ad15b3 = []byte{
	// 210 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2a, 0x4e, 0xce, 0x2f,
	0x4a, 0x8d, 0x2f, 0x2d, 0x48, 0x49, 0x2c, 0x49, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62,
	0x2f, 0x48, 0x02, 0x8b, 0x2a, 0x39, 0x72, 0xf1, 0x04, 0x83, 0x18, 0x41, 0xa9, 0x85, 0xa5, 0xa9,
	0xc5, 0x25, 0x42, 0xd2, 0x5c, 0x9c, 0x05, 0x39, 0x89, 0x95, 0xa9, 0x45, 0xf1, 0x99, 0x29, 0x12,
	0x8c, 0x0a, 0x8c, 0x1a, 0xac, 0x41, 0x1c, 0x10, 0x01, 0xcf, 0x14, 0x21, 0x11, 0x2e, 0xd6, 0x82,
	0xfc, 0xcc, 0xbc, 0x12, 0x09, 0x26, 0xb0, 0x04, 0x84, 0xa3, 0x24, 0xcf, 0xc5, 0x0b, 0x35, 0xa2,
	0xb8, 0x20, 0x3f, 0xaf, 0x38, 0x55, 0x88, 0x8f, 0x8b, 0x29, 0x3f, 0x1b, 0xac, 0x99, 0x23, 0x88,
	0x29, 0x3f, 0xdb, 0xc8, 0x0f, 0x6a, 0x47, 0x28, 0xd8, 0x05, 0x45, 0x42, 0x76, 0x5c, 0xdc, 0x10,
	0x26, 0x58, 0x54, 0x48, 0x54, 0x0f, 0xea, 0x18, 0x3d, 0x64, 0x97, 0x48, 0x89, 0xa1, 0x0b, 0x43,
	0x4c, 0x57, 0x62, 0x70, 0x32, 0xe0, 0x92, 0xce, 0xcc, 0xd7, 0x4b, 0x2f, 0x2a, 0x48, 0xd6, 0x4b,
	0xad, 0x48, 0xcc, 0x2d, 0xc8, 0x49, 0x2d, 0xd6, 0xcb, 0x48, 0xcd, 0xc9, 0xc9, 0x2f, 0xcf, 0x2f,
	0xca, 0x49, 0x71, 0xe2, 0xf7, 0x00, 0xb1, 0xc3, 0x41, 0xec, 0x00, 0x90, 0x67, 0x03, 0x18, 0x93,
	0xd8, 0xc0, 0xbe, 0x36, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0x99, 0xd2, 0x2f, 0x76, 0x0b, 0x01,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ScoreUpdaterClient is the client API for ScoreUpdater service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ScoreUpdaterClient interface {
	UpdateScore(ctx context.Context, in *ScoreRequest, opts ...grpc.CallOption) (*ScoreResponse, error)
}

type scoreUpdaterClient struct {
	cc *grpc.ClientConn
}

func NewScoreUpdaterClient(cc *grpc.ClientConn) ScoreUpdaterClient {
	return &scoreUpdaterClient{cc}
}

func (c *scoreUpdaterClient) UpdateScore(ctx context.Context, in *ScoreRequest, opts ...grpc.CallOption) (*ScoreResponse, error) {
	out := new(ScoreResponse)
	err := c.cc.Invoke(ctx, "/pbscore.ScoreUpdater/UpdateScore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ScoreUpdaterServer is the server API for ScoreUpdater service.
type ScoreUpdaterServer interface {
	UpdateScore(context.Context, *ScoreRequest) (*ScoreResponse, error)
}

// UnimplementedScoreUpdaterServer can be embedded to have forward compatible implementations.
type UnimplementedScoreUpdaterServer struct {
}

func (*UnimplementedScoreUpdaterServer) UpdateScore(ctx context.Context, req *ScoreRequest) (*ScoreResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateScore not implemented")
}

func RegisterScoreUpdaterServer(s *grpc.Server, srv ScoreUpdaterServer) {
	s.RegisterService(&_ScoreUpdater_serviceDesc, srv)
}

func _ScoreUpdater_UpdateScore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ScoreRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScoreUpdaterServer).UpdateScore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pbscore.ScoreUpdater/UpdateScore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScoreUpdaterServer).UpdateScore(ctx, req.(*ScoreRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ScoreUpdater_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pbscore.ScoreUpdater",
	HandlerType: (*ScoreUpdaterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UpdateScore",
			Handler:    _ScoreUpdater_UpdateScore_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "score_update.proto",
}
